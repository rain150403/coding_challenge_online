/*
题目2 : 股票价格II
时间限制:10000ms
单点时限:1000ms
内存限制:256MB
描述
小Hi最近在关注股票，为了计算股票可能的盈利，他获取了一只股票最近N天的价格A1~AN。

在小Hi的策略中，每天可以在下列三种操作中选取一种：

1.什么也不做；

2.按照当天的价格买进一个单位的股票；

3.按照当天的价格卖出部分或所有股票。

现在小Hi希望能够知道，如果在N天前手中持有的股票数为0，并且假设拥有无限的金钱，在这N天结束能够获得的最大利润是多少？

输入
第一行包含一个整数N。  

第二行包含N个整数，A1, A2, ... AN。  

对于30%的数据， 1 ≤ N ≤ 103  

对于100%的数据，1 ≤ N ≤ 106， 1 ≤ Ai ≤ 100

输出
输出这N天结束能够获得的最大利润。

样例输入
5
1 2 3 4 5
样例输出
10
*/

//运行时间：732ms 占用内存：24MB

#include <cstdio>
#include <algorithm>   //用到max函数才用到这个

using namespace std;  //用到max函数才用到这个

int n, a[1000111], mx, ans;

void work(){
    scanf( "%d", &n );
    for( int i = 0; i < n; ++i ){
        scanf( "%d", &a[i] );
    }
    
    mx = a[n-1];
    
    for( int i = n-2; i >= 0; --i ){
        if( mx > a[i] ){
            ans += ( mx - a[i] );
        }
        mx = max( mx, a[i] );
    }
    printf( "%d", ans );
}

int main(){
    int TC = 1;
    for( int i = 1; i <= TC; ++i ){
        work();
    }
    
    return 0;
}


//简单来说，买入是负， 不操作是0， 只有卖出才是赚钱，我们最差是不操作0，所以今天与前几天差值越大我们就应该卖，赚的越多。可能也只是这里比较简单而已。
